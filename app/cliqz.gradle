def addonsPath = 'src/main/assets/addons'
def privacyAddonUrl = 'https://s3.amazonaws.com/cdncliqz/update/edge/cliqz_privacy/master/latest.zip'
def privacyAddonId = 'privacy@cliqz.com'
def privacyAddonPath = "${addonsPath}/${privacyAddonId}"
def consentAddonUrl = 'https://s3.amazonaws.com/cdncliqz/update/browser_pre/gdprtool@cliqz.com/gdprtool@cliqz.com-1.0.12-browser-signed.xpi'
def consentAddonId = 'gdprtool@cliqz.com'
def consentAddonPath = "${addonsPath}/${consentAddonId}"

task downloadPrivacyAddon(type: Download) {
    src privacyAddonUrl
    dest new File(downloadTaskDir, "${privacyAddonId}.zip")
    onlyIfModified true
}

task downloadConsentAddon(type: Download) {
    src consentAddonUrl
    dest new File(downloadTaskDir, "${consentAddonId}.zip")
    onlyIfModified true
}

task deleteOldAddons(type: Delete) {
    delete addonsPath
    followSymlinks = true
}

task updatePrivacyAddons(dependsOn: [deleteOldAddons, downloadPrivacyAddon], type: Copy) {
    from zipTree(downloadPrivacyAddon.dest)
    into privacyAddonPath
}

task updateConsentAddon(dependsOn: [deleteOldAddons, downloadConsentAddon], type: Copy) {
    from zipTree(downloadConsentAddon.dest)
    into consentAddonPath
}

android {
    defaultConfig {
        buildConfigField('String', 'PRIVACY_ADDON_ID', "\"${privacyAddonId}\"")
    }
    aaptOptions{
        // default ignoreAssetsPattern list includes all files and folders starting with _
        // that breaks webextensions i18n as traslation are located in _locales folder
        ignoreAssetsPattern  '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
}

preBuild.dependsOn(updatePrivacyAddons)
// preBuild.dependsOn(updateConsentAddon)
